//input
4
3
3 5 7
3
2 4 6
2
5 5
5
2 4 3 3 16


output
8
10
3
24










#include<bits/stdc++.h>
using namespace std;
void generateseive(vector<int>&seive)
{
    seive[0]=0;
    seive[1]=1;
    for(int i=2;i*i<=1e6+1;i++)
    {
        if(seive[i]==1)
        {
            seive[i]=i;
            for(int j=i*i;j<1e6+1;j+=i)
            {
                if(seive[j]!=j) seive[j]=i;
            }
        }
    }
}
int main()
{
    vector<int>seive(1e6+1,1);
    generateseive(seive);
    int n;
    cin>>n;
    vector<int>num;
    for(int i=0;i<n;i++)
    {
        int c;
        cin>>c;
        num.push_back(c);
    }
    map<int,int>mpp;
    for(int i=0;i<num.size();i++)
    {
        int k=num[i];
        while(k>1)
        {
            int c=seive[k];
            mpp[c]++;
            k=k/seive[k];
            
        }
    }
    int ans=1;
    for(auto it:mpp)
    {
        ans*=(it.second+1);
    }
    cout<<ans;
    
}
